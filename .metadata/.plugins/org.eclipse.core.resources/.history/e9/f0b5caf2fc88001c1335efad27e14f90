package com.lloyds.ida.atmlocatorservice.controller;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.ProtocolException;
import java.net.URL;
import java.util.Scanner;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

import com.google.gson.Gson;
import com.lloyds.ida.atmlocatorservice.beans.Atms;

@RestController
public class AtmsController {
	
	@GetMapping("atm-locator-service/atms")
	public Atms retrieveATMs() {
	
		String json = getJsonResponse();

		Gson gson = new Gson();

		Atms atms = gson.fromJson(json, Atms.class);
		return atms;
	}
	
	static String getJsonResponse(){
		String url = "https://api.lloydsbank.com/open-banking/v2.2/atms";
    	System.out.println("url :"+ url);
    	StringBuffer response= null;
    	 try {
    	 URL obj = new URL(url);
         HttpURLConnection con = (HttpURLConnection) obj.openConnection();
         con.setRequestMethod("GET");
       //  con.setRequestProperty("User-Agent", "Mozilla/5.0");
         int responsecode = con.getResponseCode(); 
         System.out.println("11111111111111111111111 "+ responsecode);
         BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()));
         String inputLine;
         response = new StringBuffer();
         if(in.readLine() != null){
        	 System.out.println("hiiiiiiiiiiiiiiiiiii");
         }else {
        	 System.out.println("yyyyyyyyyyyyyyyyyyyyyyyyy");
         }
         while((inputLine = in.readLine()) != null) {
        	 System.out.println("22222222222222 "+ inputLine);
             response.append(inputLine);
         } con.disconnect();
           
        
		//	JSONObject obj_JSONObject = new JSONObject(response.toString());
			System.out.println("hsfh345lksd :"+ response.toString());
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return response.toString();
	}
	
}
